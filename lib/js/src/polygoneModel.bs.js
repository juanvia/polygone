// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';


var Polynomial = /* module */[];

function flavor_of_string(s) {
  switch (s) {
    case "pedantic" : 
        return /* Pedantic */1;
    case "traditional" : 
        return /* Traditional */0;
    default:
      return /* Pedantic */1;
  }
}

function string_of_flavor(f) {
  if (f) {
    return "pedantic";
  } else {
    return "traditional";
  }
}

var Action = /* module */[
  /* flavor_of_string */flavor_of_string,
  /* string_of_flavor */string_of_flavor
];

function reducer(state, action) {
  var new_state;
  switch (action.tag | 0) {
    case 0 : 
        new_state = /* record */[
          /* exponentsArray */action[0],
          /* variablesNotation */state[/* variablesNotation */1],
          /* coefficientNotation */state[/* coefficientNotation */2],
          /* dimensions */state[/* dimensions */3],
          /* degree */state[/* degree */4]
        ];
        break;
    case 1 : 
        new_state = /* record */[
          /* exponentsArray */state[/* exponentsArray */0],
          /* variablesNotation */action[0],
          /* coefficientNotation */state[/* coefficientNotation */2],
          /* dimensions */state[/* dimensions */3],
          /* degree */state[/* degree */4]
        ];
        break;
    case 2 : 
        new_state = /* record */[
          /* exponentsArray */state[/* exponentsArray */0],
          /* variablesNotation */state[/* variablesNotation */1],
          /* coefficientNotation */action[0],
          /* dimensions */state[/* dimensions */3],
          /* degree */state[/* degree */4]
        ];
        break;
    case 3 : 
        new_state = /* record */[
          /* exponentsArray */state[/* exponentsArray */0],
          /* variablesNotation */state[/* variablesNotation */1],
          /* coefficientNotation */state[/* coefficientNotation */2],
          /* dimensions */action[0],
          /* degree */state[/* degree */4]
        ];
        break;
    case 4 : 
        new_state = /* record */[
          /* exponentsArray */state[/* exponentsArray */0],
          /* variablesNotation */state[/* variablesNotation */1],
          /* coefficientNotation */state[/* coefficientNotation */2],
          /* dimensions */state[/* dimensions */3],
          /* degree */action[0]
        ];
        break;
    
  }
  console.log(new_state);
  return new_state;
}

var State_000 = /* initial_state : record */[
  /* exponentsArray */"",
  /* variablesNotation : Traditional */0,
  /* coefficientNotation : Pedantic */1,
  /* dimensions */3,
  /* degree */6
];

var State = /* module */[
  State_000,
  /* reducer */reducer
];

exports.Polynomial = Polynomial;
exports.Action = Action;
exports.State = State;
/* No side effect */
